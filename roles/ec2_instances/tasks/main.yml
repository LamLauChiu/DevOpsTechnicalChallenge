---
# tasks file for ec2

    - name: "Installing boto library in base os"
      pip:
        name: boto
        state: present
    # - name: "Making Security group for multi-node cluster"
    #   ec2_group:
    #     name: "{{ sg_name }}"
    #     region: "{{ region_name }}"
    #     description: "{{ securityGroupDescription }}"
    #     vpc_id: "{{ vpc_id }}"
    #     state: present
    #     aws_access_key: "{{ aws_access_key }}"
    #     aws_secret_key: "{{ aws_secret_key }}"
    #     rules:
    #       - proto: all
    #         cidr_ip: "0.0.0.0/0"

    - name: "Launching Master node"
      ec2_instance:
        name: "Master Node"
        region: "{{ region_name }}"
        key_name: "{{ key_name }}"
        instance_type: t2.micro
        image_id: "{{ ami_id }}"
        security_group: "{{ sg_name }}"
        network:    
          assign_public_ip: true
        vpc_subnet_id: "{{ subnet_id }}"
        state: present
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: masterIp
      
    - lineinfile:
        path: "{{ inventoryLocation }}"
        regexp: "[^%]*ssh"
        state: absent
        
    - name: "Updating the master node's public ip in inventory "
      lineinfile:
        path: "{{ inventoryLocation }}"
        regexp: "masterNode"
        line: "[masterNode]\n{{ masterIp['instances'][0]['public_dns_name']}} ansible_user=ec2-user ansible_connection=ssh\n"

    - name: "Launching Worker node"
      ec2_instance:
        name: "Worker Node - {{ item+1 }}"
        region: "{{ region_name }}"
        key_name: "{{ key_name }}"
        instance_type: t2.micro
        image_id: "{{ ami_id }}"
        security_group: "{{ sg_name }}"
        network:
          assign_public_ip: true
        vpc_subnet_id: "{{ subnet_id }}"
        state: present
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: workerIp
      loop: "{{ range(0, 2) }}"
      
    - name: "Updating the worker node's public ip in inventory "
      lineinfile:
        path: "{{ inventoryLocation }}"
        regexp: "workerNode"
        line: "[workerNode]\n{{ workerIp['results'][item]['instances'][0]['public_dns_name']}} ansible_user=ec2-user ansible_connection=ssh"
      loop: "{{ range(0, 2) }}"

# - name: Installing boto & boto3 on local system
#   pip:
#     name: "{{ item }}"
#     state: present
#   loop: "{{ python_pkgs }}"

# - name: Creating Security Group for K8s Cluster
#   ec2_group:
#     name: "{{ sg_name }}"
#     description: Security Group for allowing all port
#     region: "{{ region_name }}"
#     aws_access_key: "{{ access_key }}"
#     aws_secret_key: "{{ secret_key }}"
#     rules:
#     - proto: all
#       cidr_ip: 0.0.0.0/0
#     rules_egress:
#     - proto: all
#       cidr_ip: 0.0.0.0/0

# - name: Launching three EC2 instances on AWS
#   ec2:
#     key_name: "{{ keypair }}"
#     instance_type: "{{ instance_flavour }}"
#     image: "{{ ami_id }}"
#     wait: true
#     # group: "{{ sg_name }}"
#     group_id: "{{ sg_name }}"
#     count: 1
#     vpc_subnet_id: "{{ subnet_name }}"
#     assign_public_ip: yes
#     region: "{{ region_name }}"
#     state: present
#     aws_access_key: "{{ access_key }}"
#     aws_secret_key: "{{ secret_key }}"
#     instance_tags:
#       Name: "{{ item }}"
#   register: ec2
#   loop: "{{ instance_tag }}"

# - name: Add 1st instance to host group ec2_master
#   add_host:
#     hostname: "{{ ec2.results[0].instances[0].public_ip }}"
#     groupname: ec2_master

# - name: Add 2nd instance to host group ec2_slave
#   add_host:
#     hostname: "{{ ec2.results[1].instances[0].public_ip }}"
#     groupname: ec2_slave

# - name: Add 3rd instance to host group ec2_slave
#   add_host:
#     hostname: "{{ ec2.results[2].instances[0].public_ip }}"
#     groupname: ec2_slave

# - name: Wait for SSH to come up
#   wait_for:
#     host: "{{ ec2.results[2].instances[0].public_dns_name }}"
#     port: 22
#     state: started