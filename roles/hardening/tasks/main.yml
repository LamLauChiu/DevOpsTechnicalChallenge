---
# - hosts: all
#   vars:
#     allowed_ssh_networks:
#       - 192.168.122.0/24
#       - 10.10.10.0/24
#     unnecessary_services:
#       - postfix
#       - telnet
#     unnecessary_software:
#       - tcpdump
#       - nmap-ncat
#       - wpa_supplicant
#   tasks:
    - name: Perform full patching
      package:
        name: '*'
        state: latest

    - name: Add admin group
      group:
        name: admin
        state: present

    - name: Add local user
      user:
        name: admin
        group: admin
        shell: /bin/bash
        home: /home/admin
        create_home: yes
        state: present

    # https://bidhankhatri.com.np/automation/ansible-playbook-to-deploy-user-with-ssh-key/
    # - name: Set authorized key for user admin copying it from current user
    #   authorized_key:
    #     user: admin
    #     state: present
    #     key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

    - name: Add SSH public key for user
      authorized_key:
        user: admin
        key: "{{ lookup('file', '/home/admin/.ssh/id_rsa.pub') }}"
        #key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present

    - name: Add sudoer rule for local user
      copy:
        dest: /etc/sudoers.d/admin
        src: etc/sudoers.d/admin
        owner: root
        group: root
        mode: 0440
        validate: /usr/sbin/visudo -csf %s

    - name: Add hardened SSH config
      copy:
        dest: /etc/ssh/sshd_config
        src: etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0600
      notify: Reload SSH

    - name: Add SSH port to internal zone
      firewalld:
        zone: internal
        service: ssh
        state: enabled
        immediate: yes
        permanent: yes

    - name: Add permitted networks to internal zone
      firewalld:
        zone: internal
        source: "{{ item }}"
        state: enabled
        immediate: yes
        permanent: yes
      with_items: "{{ allowed_ssh_networks }}"

    - name: Drop ssh from the public zone
      firewalld:
        zone: public
        service: ssh
        state: disabled
        immediate: yes
        permanent: yes

    - name: Remove undesirable packages
      package:
        name: "{{ unnecessary_software }}"
        state: absent

    - name: Stop and disable unnecessary services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      with_items: "{{ unnecessary_services }}"
      ignore_errors: true

    - name: Set a message of the day
      copy:
        dest: /etc/motd
        src: etc/motd
        owner: root
        group: root
        mode: 0644

    - name: Set a login banner
      copy:
        dest: "{{ item }}"
        src: etc/issue
        owner: root
        group: root
        mode: 0644
      with_items:
        - /etc/issue
        - /etc/issue.net

  # handlers:
  #   - name: Reload SSH
  #     service:
  #       name: sshd
  #       state: reloaded


    - name: open firewall ports ( MASTERS )
      firewalld:
        port: "{{ item.port }}"
        
        permanent: yes
        state: enabled
      with_items:
        - { port: 6443/tcp }
        - { port: 8285/udp }
        - { port: 8472/tcp }
        - { port: 8080/tcp }
        - { port: 2379-2380/tcp }
        - { port: 10250-10252/tcp }
      when: "'masters' in group_names"
      tags:
        - firewalld

    # Opern Required Worker Ports
    - name: open firewall ports ( WORKERS )
      firewalld:
        port: "{{ item.port }}"
        permanent: yes
        state: enabled
      with_items:
        - { port: 10250/tcp }
        - { port: 8285/udp }
        - { port: 8472/tcp }
        - { port: 8080/tcp }
        - { port: 30000-32767/tcp }
      when: "'workers' in group_names"
      tags:
        - firewalld

    # Turn on and Enable Firewalld
    - name: Turn on and enable firewalld
      service:
        name: firewalld
        state: restarted
        enabled: yes
      tags:
        - firewalld